<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gnet.app.good.GoodMapper" >
    <resultMap id="BaseGoodMap" type="com.gnet.app.good.Good" >
        <id column="id" property="id" jdbcType="CHAR" />
		<result column="create_date" property="createDate" />
		<result column="modify_date" property="modifyDate" />
		<result column="supplier_id" property="supplierId" jdbcType="CHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="model" property="model" jdbcType="VARCHAR"/>
		<result column="type" property="type" jdbcType="VARCHAR"/>
		<result column="color" property="color" jdbcType="VARCHAR"/>
		<result column="specification" property="specification" jdbcType="VARCHAR"/>
		<result column="status_type" property="statusType" jdbcType="INTEGER"/>
		<result column="unit" property="unit" jdbcType="INTEGER"/>
		<result column="atom_unit" property="atomUnit" jdbcType="INTEGER"/>
		<result column="price" property="price" jdbcType="DECIMAL"/>
		<result column="length" property="length" jdbcType="DECIMAL"/>
		<result column="weight" property="weight" jdbcType="DECIMAL"/>
		<result column="width" property="width" jdbcType="DECIMAL"/>
		<result column="height" property="height" jdbcType="DECIMAL"/>
		<result column="onsale_status" property="onsaleStatus" jdbcType="INTEGER"/>
		<result column="business_id" property="businessId" jdbcType="CHAR"/>
		<result column="onsale_status_text" property="onsaleStatusText" jdbcType="VARCHAR"/>
		
    </resultMap>
    
    <resultMap id="StorageGoodStatusDetailMap" type="com.gnet.app.good.StorageGoodStatusDetail" >
        <result column="reserved_total_num" property="reservedTotalNum" jdbcType="DECIMAL"/>
        <result column="need_deliver_total_num" property="needDeliverTotalNum" jdbcType="DECIMAL"/>
        <result column="storage_out_total_num" property="storageOutTotalNum" jdbcType="DECIMAL"/>
        <association property="good"  javaType="com.gnet.app.good.Good" resultMap="BaseGoodMap"></association>
    </resultMap>
    
    <resultMap id="GoodExtMap"  type="com.gnet.app.good.Good"  extends ="BaseGoodMap">
        <association property="supplier"  javaType="com.gnet.app.supplier.Supplier">  
            <result property="id" column="supplier_id"  jdbcType="VARCHAR" /> 
            <result property="supplierName" column="supplier_name"  jdbcType="VARCHAR" /> 
        </association>
        <association property="storageGoodStatus"  javaType="com.gnet.app.storageGoodStatus.StorageGoodStatus">  
            <result property="id" column="id"  jdbcType="VARCHAR" /> 
            <result property="storeNow" column="good_staus_store_now"  /> 
        </association>
        <collection property="storageInAndOutList" ofType="com.gnet.app.good.GoodStorageInAndOutRecord" >
            <result column="storage_op_type" property="type" jdbcType="INTEGER"/>
            <result column="storage_op_id" property="id" jdbcType="VARCHAR"/>
            <result column="storage_op_batch_number" property="batchNumber" jdbcType="VARCHAR"/>
            <result column="storage_op_change_date" property="changeDate" />
            <result column="storage_op_num" property="num" jdbcType="INTEGER"/>
            <result column="storage_op_cost" property="cost" jdbcType="DECIMAL"/>
        </collection>
    </resultMap>
	
	
	<select id="selectGoodsAll" resultMap="BaseGoodMap">
		select * from ykj_storage_goods 
		<where>
		    <if test=" name != null ">
                and name like '%${@com.gnet.utils.string.StringEscapeUtils@escapeSql(name)}%'
            </if>
            <if test=" onsaleStatus != null ">
                and onsale_status = #{onsaleStatus}
            </if>
		</where>
	</select>
	
	<select id="selectGoodsAllList" resultMap="BaseGoodMap">
		select * from ykj_storage_goods 
		<where>
			<if test=" name != null ">
				and name = #{name}
			</if>
			<if test=" onsaleStatus != null ">
				and onsale_status = #{onsaleStatus}
			</if>
		</where>
		<if test=" orderList != null ">
		<foreach collection="orderList" index="index" item="orderItem" open="order by " separator="," close="">
			  #{orderItem}
		</foreach>
		</if>
	</select>
	
	<select id="isExists" resultType="java.lang.Integer">
	   select count(1) from ykj_storage_goods where model = #{model} and business_id = #{businessId}
	   <if test="originValue != null">
	       and model != #{originValue}
	   </if>
	   limit 1
	</select>
	
	<select id="useInOrder" resultType="java.lang.Integer">
	   select count(1) from ykj_order_goods where storage_goods_id = #{storageGoodsId} limit 1
	</select>
	
	<select id="findByIds" resultMap="BaseGoodMap">
       select * from ykj_storage_goods where id in 
       <foreach collection="ids" item="id" separator="," open="(" close=")">
           #{id}
       </foreach>
    </select>
    
    <!-- 2016-11-04 -->
   	<!-- 根据查询条件查询商品详情信息-->
	<select id="selectGoodDetailsByCondition" resultMap="GoodExtMap" parameterType="com.gnet.app.good.GoodCondition">
		SELECT
		  t.*, s.store_now good_staus_store_now, w.supplier_name
		FROM
		  ykj_storage_goods t
		LEFT JOIN ykj_storage_goods_status s ON s.id = t.id
		LEFT JOIN ykj_supplier w ON w.id = t.supplier_id AND t.business_id = w.business_id
		<where>
			<if test=" fuzzyName != null and fuzzyName != ''">
                and t.name like CONCAT('%',CONCAT(#{fuzzyName},'%'))
            </if>
		    <if test=" fuzzyModel != null and fuzzyModel != ''">
                and t.model like CONCAT('%',CONCAT(#{fuzzyModel},'%'))
            </if>
            <if test=" businessId != null and businessId != ''">
                and t.business_id = #{businessId}
            </if>
            <if test=" onsaleStatus != null ">
                and t.onsale_status = #{onsaleStatus}
            </if>
		</where>
	</select>
    
    <!-- 根据查询条件查询库存商品状态明细清单 -->
    <select id="selectStorageGoodStatusDetailList" resultMap="StorageGoodStatusDetailMap" parameterType="com.gnet.app.good.GoodCondition">
        SELECT
		  t.id,
		  t.name,
		  t.model,
		  t.price,
		  s.store_now,
		  SUM(w.reserved_goods) AS reserved_total_num,
		  SUM(w.need_deliver_num) AS need_deliver_total_num,
		  sum(e.num) storage_out_total_num,
		  t.onsale_status,
		  (select a.value from sc_codeword a,sc_codeword_type b where b.id=a.codeword_type_id and a.code=t.onsale_status and b.type_value = 'ONSALE_STATUS') onsale_status_text, 
		  t.modify_date
		FROM
		  ykj_storage_goods AS t 
		    LEFT JOIN ykj_storage_goods_status AS s ON t.id = s.id 
		    LEFT JOIN ykj_order_goods AS w ON w.storage_goods_id = t.id 
		    LEFT JOIN ykj_order AS q ON w.order_id = q.id AND q.type IN (0, 1)
		    left join ykj_storage_out_detail e on e.storage_goods_id = t.id
		 <where>
		      <if test="businessId != null and businessId != ''">
		          and t.business_id = #{businessId}
		      </if>
		       <if test="fuzzyName != null and fuzzyName != ''">
                  and t.name like '%${@com.gnet.utils.string.StringEscapeUtils@escapeSql(fuzzyName)}%'
              </if>
		 </where>
		GROUP BY
		  t.id, t.name, t.model, t.price, s.store_now
    </select>
    
    <select id="selectStorageInAndOutRecordsById" resultMap="GoodExtMap">
        (select 0 as storage_op_type,t.id storage_op_id,t.batch_number storage_op_batch_number,t.change_date storage_op_change_date,s.num storage_op_num,s.cost storage_op_cost from ykj_storage_in t,ykj_storage_in_detail s where t.id = s.storage_in_id
        and s.storage_goods_id = #{id})
        union all 
        (select 1 as storage_op_type,t.id storage_op_id,t.batch_number storage_op_batch_number,t.change_date storage_op_change_date,s.num storage_op_num,0 storage_op_cost from ykj_storage_out t,ykj_storage_out_detail s where t.id = s.storage_out_id
        and s.storage_goods_id = #{id})
    </select>
</mapper>